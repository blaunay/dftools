grammar net.sf.dftools.cdl.Cdl with org.eclipse.xtext.common.Terminals

generate cdl "http://www.sf.net/dftools/cdl/Cdl"

///////////////////////////////////////////////////////////////////////////////
// top-level entity
///////////////////////////////////////////////////////////////////////////////

Entity: 
	('package' package=QualifiedName ';')?
	(imports += Import)*
	
	(types += TypeDecl)*
	
	//('component' name=ID '(' ')' component=AstComponent)?;
	;

Import: 'import' importedNamespace=QualifiedNameWithWildCard ';';

QualifiedName:
	ID ('.' ID)*;

QualifiedNameWithWildCard:
	QualifiedName '.*'?;

	
///////////////////////////////////////////////////////////////////////////////
// component
///////////////////////////////////////////////////////////////////////////////

/*AstComponent: {AstComponent}
'{'
'}';*/

///////////////////////////////////////////////////////////////////////////////
// classes
///////////////////////////////////////////////////////////////////////////////

Class: 
	'class' name=ID  '{'
		((attributes+=AstAttribute)';')*
	'}';

AstAttribute: type=Type name=ID;

Enum : 'enum' name=ID '{' (identifiers += ID) (',' (identifiers += ID)*)? '}';

///////////////////////////////////////////////////////////////////////////////
// types
///////////////////////////////////////////////////////////////////////////////

TypeDecl: Class | Enum;

Type: TypeBool | TypeInt | TypeLong | TypeString | TypeRef;

TypeRef: type=[TypeDecl];

TypeBool: name='bool';

TypeInt: name='int';

TypeLong: name='long';

TypeString: name='String';
